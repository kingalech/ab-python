# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

#trigger:
#- master

stages:
- stage: Build

  jobs: 
  - job: Build
    variables:
    - group: SonarQubeVarialbes
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
      displayName: 'Prepare analysis on SonarQube'
      inputs:
        SonarQube: Sonar
        scannerMode: CLI
        configMode: manual
        cliProjectKey: ab
        cliProjectName: ab

    - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@4
      displayName: 'Run Code Analysis'

    - task: ShellScript@2
      displayName: "Print the task id"
      inputs:
        scriptPath: "$(System.DefaultWorkingDirectory)/quality-gate-checker.sh"
        args: "$(sonar_token) $(sonar_server) $(System.DefaultWorkingDirectory)/.scannerwork/report-task.txt"

    - task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@4
      displayName: 'Publish Quality Gate Result'


  #  - task: Docker@2
  #    displayName: buildAndPush
  #    inputs:
  #      containerRegistry: kidockerhub
  #      repository: kingalech/dreamteam
  #      Dockerfile: 'dreamteam-app/Dockerfile'

- stage: Deploy
  
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: Bash@3
      displayName: Fetch CloudHedge CLI
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          wget http://18.219.238.77/chcli
          chmod +x chcli
          echo `pwd`
          