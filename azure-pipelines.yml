# Python package
# Create and test a Python package on multiple Python versions.
#adding new comment
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

stages:
- stage: Build

  jobs: 
  - job: Build
    variables:
    - group: SonarQubeVarialbes
    - group: keys

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
      displayName: 'Submit analysis on SonarQube'
      inputs:
        SonarQube: Sonar
        scannerMode: CLI
        configMode: manual
        cliProjectKey: ab
        cliProjectName: ab

    - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@4
      displayName: 'Prepare for Code Analysis'

    - task: ShellScript@2
      displayName: "Verify Analysis Results"
      inputs:
        scriptPath: "$(System.DefaultWorkingDirectory)/quality-gate-checker.sh"
        args: "$(sonar_token) $(sonar_server) $(System.DefaultWorkingDirectory)/.scannerwork/report-task.txt"

    - task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@4
      displayName: 'Publish Quality Gate Result'

    - task: Docker@2
      displayName: 'Docker Login'
      inputs:
        containerRegistry: 'azureacr'
        command: 'login'
    - task: Docker@2
      displayName: 'Docker Build and Push'
      inputs:
        containerRegistry: 'azureacr'
        repository: dreamteam.azurecr.io/dreamteam
        Dockerfile: 'dreamteam-app/Dockerfile'

- stage: Deploy
  
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
    - group: DEV-Variables
    - group: GlobalVars
    - group: keys
    steps:
    - task: Bash@3
      displayName: Fetch CloudHedge CLI
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          wget 'https://ch-cli.s3.ap-south-1.amazonaws.com/latest/chctl_linux?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAZENAAZKQV5RZ7TAC%2F20200617%2Fap-south-1%2Fs3%2Faws4_request&X-Amz-Date=20200617T103117Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=4a2d0eaffd7cb1f798d74a035e02b9325343eb87243a4666e347d00e5ec087e7'
          mv chctl_linux* chcli
          chmod +x chcli
          echo `pwd`
                              
    - task: Bash@3
      displayName: CloudHedge Login
      inputs:
        targetType: 'inline'
        script: |     
          echo "Logging to Cloudhedge application server"

          echo $(System.DefaultWorkingDirectory)/chcli login --username=$(chuser) --password=$(ch-password) --server=$(churl)

          $(System.DefaultWorkingDirectory)/chcli login --username=$(chuser) --password=$(ch-password) --server=$(churl)

    - task: Bash@3
      displayName: New version - App BluePrint
      inputs:
        targetType: 'inline'
        script: |     
          echo 'Creating the application blueprint new version'
         
          echo $(System.DefaultWorkingDirectory)/chcli  cluster addVersion --versionName="dt-$(ENV_NAME)-$(Build.BuildId)"  --blueprintId=$(APP_BLUEPRINT_ID) --secret=$(dt-acr-ch-secret)

          $(System.DefaultWorkingDirectory)/chcli  cluster addVersion --versionName="dt-$(ENV_NAME)-$(Build.BuildId)"  --blueprintId=$(APP_BLUEPRINT_ID) --secret=$(dt-acr-ch-secret)
          sleep 5 

    - task: Bash@3
      displayName: App BluePrint Services
      inputs:
        targetType: 'inline'
        script: |
          set -x

          sudo apt  install jq -y

          echo "[$(Build.BuildId)]"

          APPVERSIONID=$($(System.DefaultWorkingDirectory)/chcli cluster listApp | jq '.apps[] |  select(.name == "dreamteampython") | .versions[] | select(.name == "dt-$(ENV_NAME)-$(Build.BuildId)") | ._id' | tr -d '"')

          echo "Appversion ID is : $APPVERSIONID"
          echo 'FLASK_CONFIG,development
          FLASK_APP,run.py
          FLASK_DB_HOST,3.133.99.233' > $(System.DefaultWorkingDirectory)/envvars.csv


          echo $(System.DefaultWorkingDirectory)/chcli cluster addService --name=pythonapp --appVersion=$APPVERSIONID --image="$(acr-url)/dreamteam.azurecr.io/dreamteam" --imageTag=$(Build.BuildId) --port=5000 --envVarFile=envvars.csv --IPType=LB

          $(System.DefaultWorkingDirectory)/chcli cluster addService --name=pythonapp --appVersion=$APPVERSIONID --image="$(acr-url)/dreamteam.azurecr.io/dreamteam" --imageTag=$(Build.BuildId) --port=5000 --envVarFile=envvars.csv --IPType=LB
          sleep 5
    - task: Bash@3
      displayName: 'App Deploy to Cluster'
      inputs:
        targetType: 'inline'
        script: |
          set -x 

          BUILDVERSIONID=$($(System.DefaultWorkingDirectory)/chcli cluster listApp | jq '.apps[] |  select(.name == "dreamteampython") | .versions[] | select(.name == "dt-$(ENV_NAME)-$(Build.BuildId)") | ._id' | tr -d '"')         

          echo "$BUILDVERSIONID"

          echo $(System.DefaultWorkingDirectory)/chcli redeploy --appId=$(APP_BLUEPRINT_ID) --appVersionId=$BUILDVERSIONID --clusterId=$(CLUSTER_ID)  --env=$(ENV_ID) 

          $(System.DefaultWorkingDirectory)/chcli redeploy --appId=$(APP_BLUEPRINT_ID) --appVersionId=$BUILDVERSIONID --clusterId=$(CLUSTER_ID)  --env=$(ENV_ID)   

          sleep 30

    - task: DockerInstaller@0
      displayName: 'Setup Functional Automation Tests'

    - task: Bash@3
      displayName: 'Execute Functional Tests'
      inputs:
        targetType: 'inline'
        script: |

          APP_URL=$($(System.DefaultWorkingDirectory)/chcli url --envId=$(ENV_ID) | jq .urls[] | jq '.portUrls | to_entries[] | "\(.value)"' | tr -d '"')

          echo "APP URL detected is - $APP_URL"

          echo "********************************"

          echo /opt/hostedtoolcache/docker-stable/17.9.0-ce/x64/docker run -e URL="http://$APP_URL" -e EMAIL=demo-user@cloudhedge.io -e PASSWORD=Password12345 utpal1048/dreamteam-test:latest

          /opt/hostedtoolcache/docker-stable/17.9.0-ce/x64/docker run -e URL="http://$APP_URL" -e EMAIL=demo-user@cloudhedge.io -e PASSWORD=Password12345 utpal1048/dreamteam-test:latest
          
